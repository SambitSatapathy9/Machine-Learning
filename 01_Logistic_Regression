#05-07-2023
#Problem Statement: Logistic Regression
#Say you have 6 input variables, and corresponding 6 output. The output can be either 0 or 1. Create 
# a function plot_data and plot the corresponding data. 

import numpy as np
import matplotlib.pyplot as plt
X = np.array([[0.5,1.5],[1,1],[1.5,0.5],[3,0.5],[2,2],[1,2.5]])
y = np.array([0,0,0,1,1,1]).reshape(-1,1) #2D Matrix

def plot_data(X,y,ax,pos_label = "y=1", neg_label = "y=0",s =80, loc = "best"):
#def plot_data(input,output,axis,label for positive examples,label for negative examples, marker size = 80, legend location default = best)
    #  """ plots logistic data with two axis """
    # Find Indices of Positive and Negative Examples
    pos = y == 1
    neg = y == 0
    pos = pos.reshape(-1,) # #work with 1D or 1D y vectors
    neg = neg.reshape(-1,)
    
    #Plot the data points
    ax.scatter(X[pos,0],X[pos,1],marker = 'x',c = 'r', label = pos_label,s=s)
    ax.scatter(X[neg,0],X[neg,1],marker = 'o',label = neg_label, facecolors = 'none',edgecolors = 'b',lw=2,s=s)
    ax.legend(loc = loc) #adds legend to plot using provided loc parameter
    
    #Remove unnecessary elements like the header,footer and toolbar of the canvas from the plot
    ax.figure.canvas.toolbar_visible = False
    ax.figure.canvas.header_visible = False
    ax.figure.canvas.footer_visible = False
    

fig,ax =plt.subplots(1,1,figsize = (4,4))
plot_data(X,y,ax)
ax.axis([0,4,0,3.5]) #It sets the limit of x and y axes for the plot
ax.set_xlabel("$x_0$")
ax.set_ylabel("$x_1$")
plt.show()
